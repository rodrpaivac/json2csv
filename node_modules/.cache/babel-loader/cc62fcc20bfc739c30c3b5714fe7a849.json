{"ast":null,"code":"var _jsxFileName = \"/Users/rodrigo/Desktop/json2csv/json2csv/src/screens/Home/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Input from \"../../components/Input\";\nimport Output from \"../../components/Output\";\nimport { Container } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [json, setJson] = useState(\"\");\n  const [csv, setCsv] = useState(\"\");\n\n  const onChange = text => {\n    setJson(text);\n  };\n\n  const onConvert = () => {\n    // e.preventDefault();\n    if (json !== \"\") {\n      try {} catch (error) {\n        console.log(\"error\", error);\n        alert(\"error\");\n      }\n\n      const parsedJson = JSON.parse(json);\n      console.log(\"parsedJson\", parsedJson); // if (\n      //   !Array.isArray(parsedJson) ||\n      //   !parsedJson.every((p) => typeof p === \"object\" && p !== null)\n      // ) {\n      //   console.log(\"return\");\n      //   return;\n      // }\n\n      const header = Object.keys(parsedJson.items[0]).join(\",\");\n      const body = parsedJson.items.map(j => Object.values(j).join(\",\")).join(\"n\");\n      setCsv(`${header}\\n${body}`);\n    } else {\n      alert(\"Entre com um JSON antes de prosseguir.\");\n    }\n  };\n\n  const onClean = () => {\n    setJson(\"\");\n    setCsv(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      onChange: onChange,\n      value: json,\n      onConvert: onConvert,\n      onClean: onClean\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), csv && /*#__PURE__*/_jsxDEV(Output, {\n      csv: csv\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"zjmv8qx3eb9TSrRfHV8+QO4yviU=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/rodrigo/Desktop/json2csv/json2csv/src/screens/Home/index.tsx"],"names":["React","useState","Input","Output","Container","Home","json","setJson","csv","setCsv","onChange","text","onConvert","error","console","log","alert","parsedJson","JSON","parse","header","Object","keys","items","join","body","map","j","values","onClean"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,SAASC,SAAT,QAA0B,UAA1B;;;AAEA,MAAMC,IAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAS,EAAT,CAAhC;AACA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAS,EAAT,CAA9B;;AAEA,QAAMS,QAAQ,GAAIC,IAAD,IAAkB;AACjCJ,IAAAA,OAAO,CAACI,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM;AACtB;AACA,QAAIN,IAAI,KAAK,EAAb,EAAiB;AACf,UAAI,CACH,CADD,CACE,OAAOO,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACAG,QAAAA,KAAK,CAAC,OAAD,CAAL;AACD;;AACD,YAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWb,IAAX,CAAnB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BE,UAA1B,EAPe,CAQf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAMG,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYL,UAAU,CAACM,KAAX,CAAiB,CAAjB,CAAZ,EAAiCC,IAAjC,CAAsC,GAAtC,CAAf;AACA,YAAMC,IAAI,GAAGR,UAAU,CAACM,KAAX,CACVG,GADU,CACLC,CAAD,IAAYN,MAAM,CAACO,MAAP,CAAcD,CAAd,EAAiBH,IAAjB,CAAsB,GAAtB,CADN,EAEVA,IAFU,CAEL,GAFK,CAAb;AAIAf,MAAAA,MAAM,CAAE,GAAEW,MAAO,KAAIK,IAAK,EAApB,CAAN;AACD,KAtBD,MAsBO;AACLT,MAAAA,KAAK,CAAC,wCAAD,CAAL;AACD;AACF,GA3BD;;AA6BA,QAAMa,OAAO,GAAG,MAAM;AACpBtB,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,MAAM,CAAC,EAAD,CAAN;AACD,GAHD;;AAKA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,QAAQ,EAAEC,QADZ;AAEE,MAAA,KAAK,EAAEJ,IAFT;AAGE,MAAA,SAAS,EAAEM,SAHb;AAIE,MAAA,OAAO,EAAEiB;AAJX;AAAA;AAAA;AAAA;AAAA,YADF,EAOGrB,GAAG,iBAAI,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA;AAAb;AAAA;AAAA;AAAA;AAAA,YAPV;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CArDD;;GAAMH,I;;KAAAA,I;AAuDN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Input from \"../../components/Input\";\nimport Output from \"../../components/Output\";\n\nimport { Container } from \"./styles\";\n\nconst Home: React.FC = () => {\n  const [json, setJson] = useState<string>(\"\");\n  const [csv, setCsv] = useState<string>(\"\");\n\n  const onChange = (text: string) => {\n    setJson(text);\n  };\n\n  const onConvert = () => {\n    // e.preventDefault();\n    if (json !== \"\") {\n      try {\n      } catch (error) {\n        console.log(\"error\", error);\n        alert(\"error\");\n      }\n      const parsedJson = JSON.parse(json);\n      console.log(\"parsedJson\", parsedJson);\n      // if (\n      //   !Array.isArray(parsedJson) ||\n      //   !parsedJson.every((p) => typeof p === \"object\" && p !== null)\n      // ) {\n      //   console.log(\"return\");\n      //   return;\n      // }\n\n      const header = Object.keys(parsedJson.items[0]).join(\",\");\n      const body = parsedJson.items\n        .map((j: any) => Object.values(j).join(\",\"))\n        .join(\"n\");\n\n      setCsv(`${header}\\n${body}`);\n    } else {\n      alert(\"Entre com um JSON antes de prosseguir.\");\n    }\n  };\n\n  const onClean = () => {\n    setJson(\"\");\n    setCsv(\"\");\n  };\n\n  return (\n    <Container>\n      <Input\n        onChange={onChange}\n        value={json}\n        onConvert={onConvert}\n        onClean={onClean}\n      />\n      {csv && <Output csv={csv} />}\n    </Container>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}