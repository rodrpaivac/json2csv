{"ast":null,"code":"import _slicedToArray from\"/Users/rodrigo/Desktop/json2csv/json2csv/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from\"react\";import Input from\"../../components/Input\";import Output from\"../../components/Output\";import{jsonToCsv}from\"../../utils/JsonToCsv\";import{Container,Header,Title}from\"./styles\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Home=function Home(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),json=_useState2[0],setJson=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),csv=_useState4[0],setCsv=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),obj=_useState6[0],setObj=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),header=_useState8[0],setHeader=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),body=_useState10[0],setBody=_useState10[1];var onChange=function onChange(text){setJson(text);};var onConvert=function onConvert(){if(json!==\"\"){var response=jsonToCsv(json,setObj);if(response){setHeader(response.header);setBody(response.body);setCsv(\"\".concat(response.header,\"\\n\").concat(response.body));}else{setCsv(\"\");alert(\"JSON inv치lido. Por favor, entre com um JSON v치lido.\");}}else{alert(\"Campo vazio. Por favor, entre com um JSON antes de prosseguir.\");}};var onClean=function onClean(){setJson(\"\");setCsv(\"\");};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Header,{children:/*#__PURE__*/_jsx(Title,{children:\"Conversor de JSON para CSV\"})}),/*#__PURE__*/_jsx(Input,{onChange:onChange,value:json,onConvert:onConvert,onClean:onClean}),csv&&/*#__PURE__*/_jsx(Output,{csv:csv,header:header,body:body,obj:obj})]});};export default Home;","map":{"version":3,"sources":["/Users/rodrigo/Desktop/json2csv/json2csv/src/screens/Home/index.tsx"],"names":["React","useState","Input","Output","jsonToCsv","Container","Header","Title","Home","json","setJson","csv","setCsv","obj","setObj","header","setHeader","body","setBody","onChange","text","onConvert","response","alert","onClean"],"mappings":"8HAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,KAAP,KAAkB,wBAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CACA,OAASC,SAAT,KAA0B,uBAA1B,CAEA,OAASC,SAAT,CAAoBC,MAApB,CAA4BC,KAA5B,KAAyC,UAAzC,C,wFAEA,GAAMC,CAAAA,IAAc,CAAG,QAAjBA,CAAAA,IAAiB,EAAM,CAC3B,cAAwBP,QAAQ,CAAS,EAAT,CAAhC,wCAAOQ,IAAP,eAAaC,OAAb,eACA,eAAsBT,QAAQ,CAAS,EAAT,CAA9B,yCAAOU,GAAP,eAAYC,MAAZ,eAEA,eAAsBX,QAAQ,CAAW,EAAX,CAA9B,yCAAOY,GAAP,eAAYC,MAAZ,eAEA,eAA4Bb,QAAQ,CAAS,EAAT,CAApC,yCAAOc,MAAP,eAAeC,SAAf,eACA,eAAwBf,QAAQ,CAAS,EAAT,CAAhC,0CAAOgB,IAAP,gBAAaC,OAAb,gBAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,IAAD,CAAkB,CACjCV,OAAO,CAACU,IAAD,CAAP,CACD,CAFD,CAIA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GAAIZ,IAAI,GAAK,EAAb,CAAiB,CACf,GAAMa,CAAAA,QAAQ,CAAGlB,SAAS,CAACK,IAAD,CAAOK,MAAP,CAA1B,CACA,GAAIQ,QAAJ,CAAc,CACZN,SAAS,CAACM,QAAQ,CAACP,MAAV,CAAT,CACAG,OAAO,CAACI,QAAQ,CAACL,IAAV,CAAP,CACAL,MAAM,WAAIU,QAAQ,CAACP,MAAb,cAAwBO,QAAQ,CAACL,IAAjC,EAAN,CACD,CAJD,IAIO,CACLL,MAAM,CAAC,EAAD,CAAN,CACAW,KAAK,CAAC,qDAAD,CAAL,CACD,CACF,CAVD,IAUO,CACLA,KAAK,CAAC,gEAAD,CAAL,CACD,CACF,CAdD,CAgBA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,CACpBd,OAAO,CAAC,EAAD,CAAP,CACAE,MAAM,CAAC,EAAD,CAAN,CACD,CAHD,CAKA,mBACE,MAAC,SAAD,yBACE,KAAC,MAAD,wBACE,KAAC,KAAD,yCADF,EADF,cAIE,KAAC,KAAD,EACE,QAAQ,CAAEO,QADZ,CAEE,KAAK,CAAEV,IAFT,CAGE,SAAS,CAAEY,SAHb,CAIE,OAAO,CAAEG,OAJX,EAJF,CAUGb,GAAG,eAAI,KAAC,MAAD,EAAQ,GAAG,CAAEA,GAAb,CAAkB,MAAM,CAAEI,MAA1B,CAAkC,IAAI,CAAEE,IAAxC,CAA8C,GAAG,CAAEJ,GAAnD,EAVV,GADF,CAcD,CAhDD,CAkDA,cAAeL,CAAAA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Input from \"../../components/Input\";\nimport Output from \"../../components/Output\";\nimport { jsonToCsv } from \"../../utils/JsonToCsv\";\n\nimport { Container, Header, Title } from \"./styles\";\n\nconst Home: React.FC = () => {\n  const [json, setJson] = useState<string>(\"\");\n  const [csv, setCsv] = useState<string>(\"\");\n\n  const [obj, setObj] = useState<string[]>([]);\n\n  const [header, setHeader] = useState<string>(\"\");\n  const [body, setBody] = useState<string>(\"\");\n\n  const onChange = (text: string) => {\n    setJson(text);\n  };\n\n  const onConvert = () => {\n    if (json !== \"\") {\n      const response = jsonToCsv(json, setObj);\n      if (response) {\n        setHeader(response.header);\n        setBody(response.body);\n        setCsv(`${response.header}\\n${response.body}`);\n      } else {\n        setCsv(\"\");\n        alert(\"JSON inv치lido. Por favor, entre com um JSON v치lido.\");\n      }\n    } else {\n      alert(\"Campo vazio. Por favor, entre com um JSON antes de prosseguir.\");\n    }\n  };\n\n  const onClean = () => {\n    setJson(\"\");\n    setCsv(\"\");\n  };\n\n  return (\n    <Container>\n      <Header>\n        <Title>Conversor de JSON para CSV</Title>\n      </Header>\n      <Input\n        onChange={onChange}\n        value={json}\n        onConvert={onConvert}\n        onClean={onClean}\n      />\n      {csv && <Output csv={csv} header={header} body={body} obj={obj} />}\n    </Container>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}