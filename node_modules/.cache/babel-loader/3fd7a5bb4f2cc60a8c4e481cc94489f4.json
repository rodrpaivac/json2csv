{"ast":null,"code":"var _jsxFileName = \"/Users/rodrigo/Desktop/json2csv/json2csv/src/screens/Home/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Input from \"../../components/Input\";\nimport Output from \"../../components/Output\";\nimport { Container } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [json, setJson] = useState(\"\");\n  const [csv, setCsv] = useState(\"\");\n\n  const onChange = text => {\n    setJson(text);\n  };\n\n  const onConvert = () => {\n    const fields = Object.keys(json[0]);\n\n    const replacer = function (key, value) {\n      return value === null ? \"\" : value;\n    };\n\n    let csv = json.map(function (row) {\n      return fields.map(function (fieldName) {\n        return JSON.stringify(row[fieldName], replacer);\n      }).join(\",\");\n    });\n    csv.unshift(fields.join(\",\")); // add header column\n\n    csv = csv.join(\"\\r\\n\");\n    console.log(csv);\n    setCsv(json);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      onChange: onChange,\n      value: json,\n      onConvert: onConvert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), csv && /*#__PURE__*/_jsxDEV(Output, {\n      csv: csv\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"zjmv8qx3eb9TSrRfHV8+QO4yviU=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/rodrigo/Desktop/json2csv/json2csv/src/screens/Home/index.tsx"],"names":["React","useState","Input","Output","Container","Home","json","setJson","csv","setCsv","onChange","text","onConvert","fields","Object","keys","replacer","key","value","map","row","fieldName","JSON","stringify","join","unshift","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,SAASC,SAAT,QAA0B,UAA1B;;;AAEA,MAAMC,IAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAS,EAAT,CAAhC;AACA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAS,EAAT,CAA9B;;AAEA,QAAMS,QAAQ,GAAIC,IAAD,IAAkB;AACjCJ,IAAAA,OAAO,CAACI,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM;AACtB,UAAMC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYT,IAAI,CAAC,CAAD,CAAhB,CAAf;;AACA,UAAMU,QAAQ,GAAG,UAAUC,GAAV,EAAeC,KAAf,EAAsB;AACrC,aAAOA,KAAK,KAAK,IAAV,GAAiB,EAAjB,GAAsBA,KAA7B;AACD,KAFD;;AAIA,QAAIV,GAAG,GAAGF,IAAI,CAACa,GAAL,CAAS,UAAUC,GAAV,EAAe;AAChC,aAAOP,MAAM,CACVM,GADI,CACA,UAAUE,SAAV,EAAqB;AACxB,eAAOC,IAAI,CAACC,SAAL,CAAeH,GAAG,CAACC,SAAD,CAAlB,EAA+BL,QAA/B,CAAP;AACD,OAHI,EAIJQ,IAJI,CAIC,GAJD,CAAP;AAKD,KANS,CAAV;AAOAhB,IAAAA,GAAG,CAACiB,OAAJ,CAAYZ,MAAM,CAACW,IAAP,CAAY,GAAZ,CAAZ,EAbsB,CAaS;;AAC/BhB,IAAAA,GAAG,GAAGA,GAAG,CAACgB,IAAJ,CAAS,MAAT,CAAN;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYnB,GAAZ;AAEAC,IAAAA,MAAM,CAACH,IAAD,CAAN;AACD,GAlBD;;AAoBA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAEI,QAAjB;AAA2B,MAAA,KAAK,EAAEJ,IAAlC;AAAwC,MAAA,SAAS,EAAEM;AAAnD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGJ,GAAG,iBAAI,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA;AAAb;AAAA;AAAA;AAAA;AAAA,YAFV;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAlCD;;GAAMH,I;;KAAAA,I;AAoCN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Input from \"../../components/Input\";\nimport Output from \"../../components/Output\";\n\nimport { Container } from \"./styles\";\n\nconst Home: React.FC = () => {\n  const [json, setJson] = useState<string>(\"\");\n  const [csv, setCsv] = useState<string>(\"\");\n\n  const onChange = (text: string) => {\n    setJson(text);\n  };\n\n  const onConvert = () => {\n    const fields = Object.keys(json[0]);\n    const replacer = function (key, value) {\n      return value === null ? \"\" : value;\n    };\n\n    let csv = json.map(function (row) {\n      return fields\n        .map(function (fieldName) {\n          return JSON.stringify(row[fieldName], replacer);\n        })\n        .join(\",\");\n    });\n    csv.unshift(fields.join(\",\")); // add header column\n    csv = csv.join(\"\\r\\n\");\n    console.log(csv);\n\n    setCsv(json);\n  };\n\n  return (\n    <Container>\n      <Input onChange={onChange} value={json} onConvert={onConvert} />\n      {csv && <Output csv={csv} />}\n    </Container>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}