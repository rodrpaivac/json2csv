{"ast":null,"code":"export const jsonToCsv = function (json) {\n  let setObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : () => {};\n\n  if (json !== \"\") {\n    try {\n      const parsedJson = JSON.parse(json);\n      setObj(parsedJson);\n      const obj = {\n        count: 2,\n        items: parsedJson\n      };\n      const header = Object.keys(obj.items[0]);\n      const body = obj.items.map(element => Object.values(element).join(\",\")).join(\"n\");\n      return {\n        header,\n        body\n      };\n    } catch (e) {\n      console.log(\"error\", e);\n      return;\n    }\n  } else {\n    return;\n  }\n};","map":{"version":3,"sources":["/Users/rodrigo/Desktop/json2csv/json2csv/src/utils/JsonToCsv/index.tsx"],"names":["jsonToCsv","json","setObj","parsedJson","JSON","parse","obj","count","items","header","Object","keys","body","map","element","values","join","e","console","log"],"mappings":"AAEA,OAAO,MAAMA,SAAoB,GAAG,UAACC,IAAD,EAA6B;AAAA,MAAtBC,MAAsB,uEAAb,MAAM,CAAE,CAAK;;AAC/D,MAAID,IAAI,KAAK,EAAb,EAAiB;AACf,QAAI;AACF,YAAME,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAnB;AACAC,MAAAA,MAAM,CAACC,UAAD,CAAN;AACA,YAAMG,GAAG,GAAG;AAAEC,QAAAA,KAAK,EAAE,CAAT;AAAYC,QAAAA,KAAK,EAAEL;AAAnB,OAAZ;AAEA,YAAMM,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYL,GAAG,CAACE,KAAJ,CAAU,CAAV,CAAZ,CAAf;AAEA,YAAMI,IAAI,GAAGN,GAAG,CAACE,KAAJ,CACVK,GADU,CACLC,OAAD,IAAkBJ,MAAM,CAACK,MAAP,CAAcD,OAAd,EAAuBE,IAAvB,CAA4B,GAA5B,CADZ,EAEVA,IAFU,CAEL,GAFK,CAAb;AAIA,aAAO;AAAEP,QAAAA,MAAF;AAAUG,QAAAA;AAAV,OAAP;AACD,KAZD,CAYE,OAAOK,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,CAArB;AACA;AACD;AACF,GAjBD,MAiBO;AACL;AACD;AACF,CArBM","sourcesContent":["import { JsonToCsv } from \"./types\";\n\nexport const jsonToCsv: JsonToCsv = (json, setObj = () => {}) => {\n  if (json !== \"\") {\n    try {\n      const parsedJson = JSON.parse(json);\n      setObj(parsedJson);\n      const obj = { count: 2, items: parsedJson };\n\n      const header = Object.keys(obj.items[0]);\n\n      const body = obj.items\n        .map((element: any) => Object.values(element).join(\",\"))\n        .join(\"n\");\n\n      return { header, body };\n    } catch (e) {\n      console.log(\"error\", e);\n      return;\n    }\n  } else {\n    return;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}