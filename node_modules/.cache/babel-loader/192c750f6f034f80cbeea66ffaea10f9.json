{"ast":null,"code":"var _jsxFileName = \"/Users/rodrigo/Desktop/json2csv/json2csv/src/screens/Home/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Input from \"../../components/Input\";\nimport Output from \"../../components/Output\";\nimport { jsonToCsv } from \"../../utils/JsonToCsv\";\nimport { Container } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [json, setJson] = useState(\"\");\n  const [csv, setCsv] = useState(\"\");\n\n  const onChange = text => {\n    setJson(text);\n  };\n\n  const onConvert = () => {\n    if (json !== \"\") {\n      const obj = {\n        count: 2,\n        items: json\n      };\n      const response = jsonToCsv(obj);\n      console.log(\"response\", response);\n\n      if (response) {\n        setCsv(response);\n      } else {\n        setCsv(\"\");\n        alert(\"JSON inv치lido. Por favor, entre com um JSON v치lido.\");\n      }\n    } else {\n      alert(\"Campo vazio. Por favor, entre com um JSON antes de prosseguir.\");\n    }\n  };\n\n  const onClean = () => {\n    setJson(\"\");\n    setCsv(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      onChange: onChange,\n      value: json,\n      onConvert: onConvert,\n      onClean: onClean\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), csv && /*#__PURE__*/_jsxDEV(Output, {\n      csv: csv\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"zjmv8qx3eb9TSrRfHV8+QO4yviU=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/rodrigo/Desktop/json2csv/json2csv/src/screens/Home/index.tsx"],"names":["React","useState","Input","Output","jsonToCsv","Container","Home","json","setJson","csv","setCsv","onChange","text","onConvert","obj","count","items","response","console","log","alert","onClean"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,SAAT,QAA0B,uBAA1B;AAEA,SAASC,SAAT,QAA0B,UAA1B;;;AAEA,MAAMC,IAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAS,EAAT,CAAhC;AACA,QAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAS,EAAT,CAA9B;;AAEA,QAAMU,QAAQ,GAAIC,IAAD,IAAkB;AACjCJ,IAAAA,OAAO,CAACI,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM;AACtB,QAAIN,IAAI,KAAK,EAAb,EAAiB;AACf,YAAMO,GAAG,GAAG;AAAEC,QAAAA,KAAK,EAAE,CAAT;AAAYC,QAAAA,KAAK,EAAET;AAAnB,OAAZ;AAEA,YAAMU,QAAQ,GAAGb,SAAS,CAACU,GAAD,CAA1B;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAxB;;AACA,UAAIA,QAAJ,EAAc;AACZP,QAAAA,MAAM,CAACO,QAAD,CAAN;AACD,OAFD,MAEO;AACLP,QAAAA,MAAM,CAAC,EAAD,CAAN;AACAU,QAAAA,KAAK,CAAC,qDAAD,CAAL;AACD;AACF,KAXD,MAWO;AACLA,MAAAA,KAAK,CAAC,gEAAD,CAAL;AACD;AACF,GAfD;;AAiBA,QAAMC,OAAO,GAAG,MAAM;AACpBb,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,MAAM,CAAC,EAAD,CAAN;AACD,GAHD;;AAKA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,QAAQ,EAAEC,QADZ;AAEE,MAAA,KAAK,EAAEJ,IAFT;AAGE,MAAA,SAAS,EAAEM,SAHb;AAIE,MAAA,OAAO,EAAEQ;AAJX;AAAA;AAAA;AAAA;AAAA,YADF,EAOGZ,GAAG,iBAAI,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA;AAAb;AAAA;AAAA;AAAA;AAAA,YAPV;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAzCD;;GAAMH,I;;KAAAA,I;AA2CN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Input from \"../../components/Input\";\nimport Output from \"../../components/Output\";\nimport { jsonToCsv } from \"../../utils/JsonToCsv\";\n\nimport { Container } from \"./styles\";\n\nconst Home: React.FC = () => {\n  const [json, setJson] = useState<string>(\"\");\n  const [csv, setCsv] = useState<string>(\"\");\n\n  const onChange = (text: string) => {\n    setJson(text);\n  };\n\n  const onConvert = () => {\n    if (json !== \"\") {\n      const obj = { count: 2, items: json };\n\n      const response = jsonToCsv(obj);\n      console.log(\"response\", response);\n      if (response) {\n        setCsv(response);\n      } else {\n        setCsv(\"\");\n        alert(\"JSON inv치lido. Por favor, entre com um JSON v치lido.\");\n      }\n    } else {\n      alert(\"Campo vazio. Por favor, entre com um JSON antes de prosseguir.\");\n    }\n  };\n\n  const onClean = () => {\n    setJson(\"\");\n    setCsv(\"\");\n  };\n\n  return (\n    <Container>\n      <Input\n        onChange={onChange}\n        value={json}\n        onConvert={onConvert}\n        onClean={onClean}\n      />\n      {csv && <Output csv={csv} />}\n    </Container>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}