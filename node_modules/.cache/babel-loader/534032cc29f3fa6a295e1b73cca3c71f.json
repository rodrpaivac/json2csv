{"ast":null,"code":"export const jsonToCsv = json => {\n  if (json !== \"\") {\n    try {\n      const parsedJson = JSON.parse(json);\n      const obj = {\n        count: 2,\n        items: parsedJson\n      };\n      console.log(\"parsedJson\", parsedJson);\n      const header = Object.keys(obj.items[0]).join(\",\");\n      console.log(\"header\", header);\n      const body = obj.items.map(j => Object.values(j).join(\",\")).join(\"n\");\n      console.log(\"body\", body);\n      return {\n        header,\n        body,\n        obj\n      };\n    } catch (e) {\n      return;\n    }\n  } else {\n    return;\n  }\n};","map":{"version":3,"sources":["/Users/rodrigo/Desktop/json2csv/json2csv/src/utils/JsonToCsv/index.tsx"],"names":["jsonToCsv","json","parsedJson","JSON","parse","obj","count","items","console","log","header","Object","keys","join","body","map","j","values","e"],"mappings":"AAEA,OAAO,MAAMA,SAAoB,GAAIC,IAAD,IAAU;AAC5C,MAAIA,IAAI,KAAK,EAAb,EAAiB;AACf,QAAI;AACF,YAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAnB;AACA,YAAMI,GAAG,GAAG;AAAEC,QAAAA,KAAK,EAAE,CAAT;AAAYC,QAAAA,KAAK,EAAEL;AAAnB,OAAZ;AAEAM,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BP,UAA1B;AACA,YAAMQ,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYP,GAAG,CAACE,KAAJ,CAAU,CAAV,CAAZ,EAA0BM,IAA1B,CAA+B,GAA/B,CAAf;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,MAAtB;AAEA,YAAMI,IAAI,GAAGT,GAAG,CAACE,KAAJ,CACVQ,GADU,CACLC,CAAD,IAAYL,MAAM,CAACM,MAAP,CAAcD,CAAd,EAAiBH,IAAjB,CAAsB,GAAtB,CADN,EAEVA,IAFU,CAEL,GAFK,CAAb;AAGAL,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBK,IAApB;AAEA,aAAO;AAAEJ,QAAAA,MAAF;AAAUI,QAAAA,IAAV;AAAgBT,QAAAA;AAAhB,OAAP;AACD,KAdD,CAcE,OAAOa,CAAP,EAAU;AACV;AACD;AACF,GAlBD,MAkBO;AACL;AACD;AACF,CAtBM","sourcesContent":["import { JsonToCsv } from \"./types\";\n\nexport const jsonToCsv: JsonToCsv = (json) => {\n  if (json !== \"\") {\n    try {\n      const parsedJson = JSON.parse(json);\n      const obj = { count: 2, items: parsedJson };\n\n      console.log(\"parsedJson\", parsedJson);\n      const header = Object.keys(obj.items[0]).join(\",\");\n      console.log(\"header\", header);\n\n      const body = obj.items\n        .map((j: any) => Object.values(j).join(\",\"))\n        .join(\"n\");\n      console.log(\"body\", body);\n\n      return { header, body, obj };\n    } catch (e) {\n      return;\n    }\n  } else {\n    return;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}