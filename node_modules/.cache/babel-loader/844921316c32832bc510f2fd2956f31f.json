{"ast":null,"code":"var _jsxFileName = \"/Users/rodrigo/Desktop/json2csv/json2csv/src/screens/Home/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Input from \"../../components/Input\";\nimport Output from \"../../components/Output\";\nimport { Container } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [json, setJson] = useState(\"\");\n  const [csv, setCsv] = useState(\"\");\n\n  const onChange = text => {\n    setJson(text);\n  };\n\n  const onConvert = () => {\n    // e.preventDefault();\n    const parsedJson = JSON.parse(json);\n    console.log(\"parsedJson\", parsedJson);\n\n    if (!Array.isArray(parsedJson.items) || !parsedJson.items.every(p => typeof p === \"object\" && p !== null)) {\n      console.log(\"return\");\n      return;\n    }\n\n    console.log(\"else\");\n    const heading = Object.keys(parsedJson[0]).join(\",\");\n    const body = parsedJson.map(j => Object.values(j).join(\",\")).join(\"n\");\n    setCsv(`${heading}${body}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      onChange: onChange,\n      value: json,\n      onConvert: onConvert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), csv && /*#__PURE__*/_jsxDEV(Output, {\n      csv: csv\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"zjmv8qx3eb9TSrRfHV8+QO4yviU=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/rodrigo/Desktop/json2csv/json2csv/src/screens/Home/index.tsx"],"names":["React","useState","Input","Output","Container","Home","json","setJson","csv","setCsv","onChange","text","onConvert","parsedJson","JSON","parse","console","log","Array","isArray","items","every","p","heading","Object","keys","join","body","map","j","values"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,SAASC,SAAT,QAA0B,UAA1B;;;AAEA,MAAMC,IAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAS,EAAT,CAAhC;AACA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAS,EAAT,CAA9B;;AAEA,QAAMS,QAAQ,GAAIC,IAAD,IAAkB;AACjCJ,IAAAA,OAAO,CAACI,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM;AACtB;AACA,UAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWT,IAAX,CAAnB;AACAU,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BJ,UAA1B;;AACA,QACE,CAACK,KAAK,CAACC,OAAN,CAAcN,UAAU,CAACO,KAAzB,CAAD,IACA,CAACP,UAAU,CAACO,KAAX,CAAiBC,KAAjB,CAAwBC,CAAD,IAAO,OAAOA,CAAP,KAAa,QAAb,IAAyBA,CAAC,KAAK,IAA7D,CAFH,EAGE;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA;AACD;;AACDD,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAEA,UAAMM,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYZ,UAAU,CAAC,CAAD,CAAtB,EAA2Ba,IAA3B,CAAgC,GAAhC,CAAhB;AACA,UAAMC,IAAI,GAAGd,UAAU,CAACe,GAAX,CAAgBC,CAAD,IAAOL,MAAM,CAACM,MAAP,CAAcD,CAAd,EAAiBH,IAAjB,CAAsB,GAAtB,CAAtB,EAAkDA,IAAlD,CAAuD,GAAvD,CAAb;AACAjB,IAAAA,MAAM,CAAE,GAAEc,OAAQ,GAAEI,IAAK,EAAnB,CAAN;AACD,GAhBD;;AAkBA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAEjB,QAAjB;AAA2B,MAAA,KAAK,EAAEJ,IAAlC;AAAwC,MAAA,SAAS,EAAEM;AAAnD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGJ,GAAG,iBAAI,QAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA;AAAb;AAAA;AAAA;AAAA;AAAA,YAFV;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAhCD;;GAAMH,I;;KAAAA,I;AAkCN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Input from \"../../components/Input\";\nimport Output from \"../../components/Output\";\n\nimport { Container } from \"./styles\";\n\nconst Home: React.FC = () => {\n  const [json, setJson] = useState<string>(\"\");\n  const [csv, setCsv] = useState<string>(\"\");\n\n  const onChange = (text: string) => {\n    setJson(text);\n  };\n\n  const onConvert = () => {\n    // e.preventDefault();\n    const parsedJson = JSON.parse(json);\n    console.log(\"parsedJson\", parsedJson);\n    if (\n      !Array.isArray(parsedJson.items) ||\n      !parsedJson.items.every((p) => typeof p === \"object\" && p !== null)\n    ) {\n      console.log(\"return\");\n      return;\n    }\n    console.log(\"else\");\n\n    const heading = Object.keys(parsedJson[0]).join(\",\");\n    const body = parsedJson.map((j) => Object.values(j).join(\",\")).join(\"n\");\n    setCsv(`${heading}${body}`);\n  };\n\n  return (\n    <Container>\n      <Input onChange={onChange} value={json} onConvert={onConvert} />\n      {csv && <Output csv={csv} />}\n    </Container>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}